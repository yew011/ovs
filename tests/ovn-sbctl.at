AT_BANNER([ovn_controller_gw])

# OVN_SBCTL_TEST_START
m4_define([OVN_SBCTL_TEST_START],
  [OVS_RUNDIR=`pwd`; export OVS_RUNDIR
   OVS_LOGDIR=`pwd`; export OVS_LOGDIR
   OVS_DBDIR=`pwd`; export OVS_DBDIR
   OVS_SYSCONFDIR=`pwd`; export OVS_SYSCONFDIR

   dnl Create databases (ovn-nb, ovn-sb).
   for daemon in ovn-nb ovn-sb; do
      AT_CHECK([ovsdb-tool create $daemon.db $abs_top_srcdir/${daemon%%-*}/${daemon}.ovsschema])
   done

   dnl Start ovsdb-server.
   AT_CHECK([ovsdb-server --detach --no-chdir --pidfile --log-file --remote=punix:$OVS_RUNDIR/db.sock ovn-nb.db ovn-sb.db], [0], [], [stderr])
    ON_EXIT_UNQUOTED([kill `cat ovsdb-server.pid`])
   AT_CHECK([[sed < stderr '
/vlog|INFO|opened log file/d
/ovsdb_server|INFO|ovsdb-server (Open vSwitch)/d']])
   AT_CAPTURE_FILE([ovsdb-server.log])

   dnl Start ovn-northd.
   AT_CHECK([ovn-northd --detach --pidfile --log-file --ovnnb-db=unix:$OVS_RUNDIR/db.sock --ovnsb-db=unix:$OVS_RUNDIR/db.sock], [0], [], [stderr])
   ON_EXIT_UNQUOTED([kill `cat ovn-northd.pid`])
   AT_CHECK([[sed < stderr '
/vlog|INFO|opened log file/d']])
   AT_CAPTURE_FILE([ovn-northd.log])
])

# OVN_SBCTL_TEST_STOP
m4_define([OVN_SBCTL_TEST_STOP],
  [AT_CHECK([check_logs "ovsdb-server.log ovn-northd.log" $1])
   AT_CHECK([ovs-appctl -t ovn-northd exit])
   AT_CHECK([ovs-appctl -t ovsdb-server exit])])

# ovn-sbctl test.
AT_SETUP([ovn-sbctl - test])
OVN_SBCTL_TEST_START

AT_CHECK([ovn-nbctl lswitch-add br-test])
AT_CHECK([ovn-nbctl lport-add br-test vif0])
AT_CHECK([ovn-nbctl lport-set-macs vif0 f0:ab:cd:ef:01:02])
AT_CHECK([ovn-sbctl add-ch ch0 stt 1.2.3.5])
AT_CHECK([ovn-sbctl bind-lport vif0 ch0])

AT_CHECK([ovn-sbctl show], [0], [dnl
Chassis "ch0"
    Encap stt
        ip: "1.2.3.5"
])

uuid=$(ovn-sbctl --columns=_uuid list Chassis ch0 | cut -d ':' -f2 | tr -d ' ')
AT_CHECK_UNQUOTED([ovn-sbctl --columns=logical_port,mac,chassis list Binding], [0], [dnl
logical_port        : "vif0"
mac                 : [["f0:ab:cd:ef:01:02"]]
chassis             : ${uuid}
])

OVN_SBCTL_TEST_STOP
AT_CLEANUP
