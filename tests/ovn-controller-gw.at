AT_BANNER([ovn_controller_gw])

m4_divert_push([PREPARE_TESTS])
ovn_check_logs () {
    sed -n "$1
/timeval.*Unreasonably long [[0-9]]*ms poll interval/d
/timeval.*faults: [[0-9]]* minor, [[0-9]]* major/d
/timeval.*disk: [[0-9]]* reads, [[0-9]]* writes/d
/timeval.*context switches: [[0-9]]* voluntary, [[0-9]]* involuntary/d
/ovs_rcu.*blocked [[0-9]]* ms waiting for .* to quiesce/d
/|WARN|/p
/|ERR|/p
/|EMER|/p" ovs-vswitchd.log ovn-northd.log ovn-controller-gw.log ovsdb-server.log ovs-vtep.log
}
m4_divert_pop([PREPARE_TESTS])

# OVN_CONTROLLER_GW_START
m4_define([OVN_CONTROLLER_GW_START],
  [OVS_RUNDIR=`pwd`; export OVS_RUNDIR
   OVS_LOGDIR=`pwd`; export OVS_LOGDIR
   OVS_DBDIR=`pwd`; export OVS_DBDIR
   OVS_SYSCONFDIR=`pwd`; export OVS_SYSCONFDIR

   dnl Create databases (ovn-nb, ovn-sb, vtep).
   AT_CHECK([ovsdb-tool create vswitchd.db $abs_top_srcdir/vswitchd/vswitch.ovsschema])
   for daemon in ovn-nb ovn-sb vtep; do
      AT_CHECK([ovsdb-tool create $daemon.db $abs_top_srcdir/${daemon%%-*}/${daemon}.ovsschema])
   done

   dnl Start ovsdb-server.
   AT_CHECK([ovsdb-server --detach --no-chdir --pidfile --log-file --remote=punix:$OVS_RUNDIR/db.sock vswitchd.db vtep.db ovn-nb.db ovn-sb.db], [0], [], [stderr])
    ON_EXIT_UNQUOTED([kill `cat ovsdb-server.pid`])
   AT_CHECK([[sed < stderr '
/vlog|INFO|opened log file/d
/ovsdb_server|INFO|ovsdb-server (Open vSwitch)/d']])
   AT_CAPTURE_FILE([ovsdb-server.log])

   dnl Start ovs-vswitchd.
   AT_CHECK([ovs-vswitchd --enable-dummy --disable-system --detach --no-chdir --pidfile --log-file -vvconn -vofproto_dpif], [0], [], [stderr])
   AT_CAPTURE_FILE([ovs-vswitchd.log])
   ON_EXIT_UNQUOTED([kill `cat ovs-vswitchd.pid`])
   AT_CHECK([[sed < stderr '
/ovs_numa|INFO|Discovered /d
/vlog|INFO|opened log file/d
/vswitchd|INFO|ovs-vswitchd (Open vSwitch)/d
/reconnect|INFO|/d
/ofproto|INFO|using datapath ID/d
/ofproto|INFO|datapath ID changed to fedcba9876543210/d']])
   AT_CHECK([ovs-vsctl -- add-br br0 \
              -- set bridge br0 datapath-type=dummy other-config:datapath-id=fedcba9876543210 other-config:hwaddr=aa:55:aa:55:00:00 protocols=[[OpenFlow10,OpenFlow11,OpenFlow12,OpenFlow13,OpenFlow14,OpenFlow15]] fail-mode=secure \
              -- add-port br0 p0 -- set Interface p0 type=dummy ofport_request=1 \
              -- add-port br0 p1 -- set Interface p1 type=dummy ofport_request=2])

   dnl Start ovs-vtep.
   AT_CHECK([vtep-ctl add-ps br0 -- set Physical_Switch br0 tunnel_ips=1.2.3.4])
   AT_CHECK([ovs-vtep --test --log-file=ovs-vtep.log --pidfile=ovs-vtep.pid --detach br0 \])

   dnl Start ovn-northd.
   AT_CHECK([ovn-nbctl lswitch-add br-test])
   AT_CHECK([ovn-northd --detach --pidfile --log-file --ovnnb-db=unix:$OVS_RUNDIR/db.sock --ovnsb-db=unix:$OVS_RUNDIR/db.sock], [0], [], [stderr])
   AT_CHECK([[sed < stderr '
/vlog|INFO|opened log file/d']])
   AT_CAPTURE_FILE([ovn-northd.log])

   dnl Start ovn-controllger-gw.
   AT_CHECK([ovn-controller-gw --detach --pidfile --log-file --vtep-db=unix:$OVS_RUNDIR/db.sock --ovnsb-db=unix:$OVS_RUNDIR/db.sock], [0], [], [stderr])
   AT_CAPTURE_FILE([ovn-controller-gw.log])
   ON_EXIT_UNQUOTED([kill `cat ovn-controller-gw.pid ovn-northd.pid`])
   AT_CHECK([[sed < stderr '
/vlog|INFO|opened log file/d
/reconnect|INFO|/d']])
])

# OVN_CONTROLLER_GW_STOP
m4_define([OVN_CONTROLLER_GW_STOP],
  [AT_CHECK([ovn_check_logs $1])
   AT_CHECK([ovs-appctl -t ovn-northd exit])
   AT_CHECK([ovs-appctl -t ovn-controller-gw exit])
   AT_CHECK([ovs-appctl -t ovsdb-server exit])
   AT_CHECK([ovs-appctl -t ovs-vswitchd exit])])


AT_SETUP([ovn-controller-gw - test])
OVN_CONTROLLER_GW_START

AT_CHECK([ovn-nbctl lport-add br-test vif0])
AT_CHECK([ovn-nbctl lport-set-macs vif0 f0:ab:cd:ef:01:02])
AT_CHECK([ovn-nbctl lport-add br-test vif0])
AT_CHECK([ovn-sbctl add-ch ch0 vxlan 1.2.3.5])
AT_CHECK([ovn-sbctl bind-lport vif0 ch0])

ovn-sbctl show
uuid=$(ovn-sbctl --columns=logical_datapath list Binding vif0 | cut -d ':' -f2 | tr -d ' ')
AT_CHECK([vtep-ctl add-ls $uuid -- bind-ls br0 p0 100 $uuid])

sleep 1

echo "list Gateway"
ovn-sbctl list Gateway
echo "list Ucast_Macs_Remote"
vtep-ctl list Ucast_Macs_Remote
echo "list Logical_Switch"
vtep-ctl list Logical_Switch
echo "list Physical_Locator"
vtep-ctl list Physical_Locator

sleep 10

ovs-vsctl show

AT_CHECK([echo 1])

OVN_CONTROLLER_GW_STOP
AT_CLEANUP
